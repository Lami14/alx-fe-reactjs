import axios from 'axios';

export const fetchUserData = async ({ username, location, minRepos, page = 1 }) => {
  const queryParts = [`${username} in:login`];

  if (location) {
    queryParts.push(`location:${location}`);
  }

  if (minRepos) {
    queryParts.push(`repos:>=${minRepos}`);
  }

  const query = queryParts.join(' ');
  const url = `https://api.github.com/search/users?q=${encodeURIComponent(query)}&page=${page}&per_page=6`;

  const headers = {};

  // Optional: Add your GitHub token if you need more rate limits
  const token = import.meta.env.VITE_APP_GITHUB_API_KEY;
  if (token) {
    headers.Authorization = `token ${token}`;
  }

  const response = await axios.get(url, { headers });

  // GitHub's search/users API returns minimal user data, so we enrich it
  const enrichedItems = await Promise.all(
    response.data.items.map(async (user) => {
      const detail = await axios.get(user.url, { headers });
      return detail.data;
    })
  );

  return {
    ...response.data,
    items: enrichedItems,
  };
};
